# yaml-language-server: $schema=https://goreleaser.com/static/schema-pro.json
# vim: set ts=2 sw=2 tw=0 fo=cnqoj
version: 2

project_name: signoz-community

before:
  hooks:
    - go mod tidy
    - cp ../../LICENSE ./PROJECT_LICENSE
    - sh -c 'cd ../.. && make build-frontend-static && cp -r frontend/build pkg/query-service/frontend-build'
    - cp ../../README.md ./PROJECT_README.md

after:
  hooks:
    - rm PROJECT_LICENSE
    - rm PROJECT_README.md

builds:
  - env:
      - CGO_ENABLED=1
      - >-
        {{- if eq .Os "linux" }}
          {{- if eq .Arch "arm64" }}CC=aarch64-linux-gnu-gcc{{- end }}
        {{- end }}
    goos:
      - linux
      - darwin
    goarch:
      - amd64
      - arm64
    goamd64:
      - v1
    goarm64:
      - v8.0
    ldflags:
      - -s -w -X github.com/SigNoz/signoz/pkg/query-service/version.version={{.Version}} -X main.commit={{.Commit}} -X main.date={{.CommitDate}} -X main.builtBy=goreleaser -X go.signoz.io/signoz/pkg/query-service/version.buildVersion={{.Version}} -X go.signoz.io/signoz/pkg/query-service/version.buildHash={{.ShortCommit}} -X go.signoz.io/signoz/pkg/query-service/version.buildTime={{.Date}} -X go.signoz.io/signoz/pkg/query-service/version.gitBranch={{.Branch}} -X go.signoz.io/signoz/ee/query-service/constants.ZeusURL=https://api.signoz.cloud
      - >-
        {{- if eq .Os "linux" }}-linkmode external -extldflags '-static'{{- end }}
    mod_timestamp: "{{ .CommitTimestamp }}"
    tags:
      - timetzdata

archives:
  - formats:
      - tar.gz
    name_template: >-
      {{ .ProjectName }}_{{- .Os }}_{{- .Arch }}
    files:
      - src: PROJECT_README.md
        dst: README.md
      - src: PROJECT_LICENSE
        dst: LICENSE
      - src: frontend-build
        dst: signoz-web

dockers:
  - dockerfile: Dockerfile.goreleaser
    image_templates:
      - coolboi567/{{ .ProjectName }}:v{{ .Version }}-amd64
    build_flag_templates:
      - "--pull"
      - "--label=org.opencontainers.image.description={{ .ProjectName }}"
      - "--label=org.opencontainers.image.created={{ .Date }}"
      - "--label=org.opencontainers.image.name={{ .ProjectName }}"
      - "--label=org.opencontainers.image.revision={{ .FullCommit }}"
      - "--label=org.opencontainers.image.version={{ .Version }}"
      - "--label=org.opencontainers.image.source={{ .GitURL }}"
      - "--platform=linux/amd64"
    use: buildx
    extra_files:
      - config/prometheus.yml
      - templates
      - frontend-build
  - dockerfile: Dockerfile.goreleaser
    image_templates:
      - coolboi567/{{ .ProjectName }}:v{{ .Version }}-arm64
    build_flag_templates:
      - "--pull"
      - "--label=org.opencontainers.image.description={{ .ProjectName }}"
      - "--label=org.opencontainers.image.created={{ .Date }}"
      - "--label=org.opencontainers.image.name={{ .ProjectName }}"
      - "--label=org.opencontainers.image.revision={{ .FullCommit }}"
      - "--label=org.opencontainers.image.version={{ .Version }}"
      - "--label=org.opencontainers.image.source={{ .GitURL }}"
      - "--platform=linux/arm64"
    use: buildx
    extra_files:
      - config/prometheus.yml
      - templates
      - frontend-build

docker_manifests:
  - name_template: coolboi567/{{ .ProjectName }}:v{{ .Version }}
    image_templates:
      - coolboi567/{{ .ProjectName }}:v{{ .Version }}-amd64
      - coolboi567/{{ .ProjectName }}:v{{ .Version }}-arm64
  - name_template: coolboi567/{{ .ProjectName }}:latest
    image_templates:
      - coolboi567/{{ .ProjectName }}:v{{ .Version }}-amd64
      - coolboi567/{{ .ProjectName }}:v{{ .Version }}-arm64

release:
  name_template: "v{{ .Version }}"
  footer: >-

    ---

    Released by [GoReleaser](https://github.com/goreleaser/goreleaser).
